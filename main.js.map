{"version":3,"sources":["./libs/ng-find-me/users/data-access/users-state/src/lib/+state/users.reducer.ts","./libs/ng-find-me/users/data-access/users-api/src/lib/request-builder.ts","./libs/ng-find-me/users/data-access/users-state/src/lib/+state/users.selectors.ts","./libs/ng-find-me/feature-shell/src/lib/shell/shell.component.ts","./libs/ng-find-me/feature-shell/src/lib/shell/shell.component.html","./apps/ng-find-me/src/app/app.module.ts","./libs/ng-find-me/users/data-access/users-api/src/index.ts","./libs/ng-find-me/users/data-access/users-state/src/lib/ng-find-me-users-data-access-users-state.module.ts","./libs/ng-find-me/users/data-access/users-api/src/lib/services/api-users.service.ts","./libs/ng-find-me/users/data-access/users-state/src/index.ts","./libs/ng-find-me/users/data-access/users-api/src/lib/base-service.ts","./libs/ng-find-me/shared/data-access/src/lib/+state/index.ts","./apps/ng-find-me/src/main.ts","./libs/ng-find-me/users/data-access/users-api/src/lib/users-api.module.ts","./libs/ng-find-me/shared/data-access/src/index.ts","./libs/ng-find-me/users/data-access/users-state/src/lib/+state/users.effects.ts","./libs/ng-find-me/users/data-access/users-api/src/lib/api-configuration.ts","./libs/ng-find-me/shared/data-access/src/lib/ng-find-me-shared-data-access.module.ts","./libs/ng-find-me/feature-shell/src/index.ts","./libs/ng-find-me/users/data-access/users-state/src/lib/+state/users.actions.ts","./libs/ng-find-me/shared/environments/src/lib/environment.ts","./libs/ng-find-me/feature-shell/src/lib/ng-find-me-feature-shell.module.ts","./apps/ng-find-me/src/app/app.component.ts","./apps/ng-find-me/src/app/app.component.html","./libs/ng-find-me/shared/data-access/src/lib/+state/app.effects.ts","./libs/ng-find-me/shared/environments/src/index.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACuB;AAE/B;AAGzC,MAAM,iBAAiB,GAAG,OAAO,CAAC;AAYlC,MAAM,YAAY,GAA+B,wEAAmB,EAAe,CAAC;AAEpF,MAAM,YAAY,GAAU,YAAY,CAAC,eAAe,CAAC;IAC9D,kCAAkC;IAClC,MAAM,EAAE,KAAK;CACd,CAAC,CAAC;AAEH,MAAM,YAAY,GAAG,iEAAa,CAChC,YAAY,EACZ,sDAAE,CAAC,mDAAiB,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,IAAG,CAAC,EAC5E,sDAAE,CAAC,+DAA6B,EAAE,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CACrD,YAAY,CAAC,MAAM,CAAC,KAAK,kCAAO,KAAK,KAAE,MAAM,EAAE,IAAI,IAAG,CACvD,EACD,sDAAE,CAAC,+DAA6B,EAAE,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,KAAK,IAAG,CAAC,CAC/E,CAAC;AAEK,SAAS,OAAO,CAAC,KAAwB,EAAE,MAAc;IAC9D,OAAO,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACrC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACpCD;AAAA;AAAA;AAAA,oBAAoB;AACpB,oBAAoB;AAMU;AAE9B;;;GAGG;AACH,MAAM,cAAc;IAClB,SAAS,CAAC,GAAW;QACnB,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,WAAW,CAAC,KAAa;QACvB,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,SAAS,CAAC,GAAW;QACnB,OAAO,kBAAkB,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,WAAW,CAAC,KAAa;QACvB,OAAO,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;CACF;AACD,MAAM,sBAAsB,GAAG,IAAI,cAAc,EAAE,CAAC;AAUpD;;GAEG;AACH,MAAe,SAAS;IACtB,YACS,IAAY,EACZ,KAAU,EACV,OAAyB,EAChC,YAAoB,EACpB,cAAuB;QAJhB,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAK;QACV,YAAO,GAAP,OAAO,CAAkB;QAIhC,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;QAC7B,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE;YACnE,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,YAAY,CAAC;SACnC;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE;YACvE,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,cAAc,CAAC;SACvC;IACH,CAAC;IAED,cAAc,CAAC,KAAU,EAAE,SAAS,GAAG,GAAG;QACxC,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;YACzC,OAAO,EAAE,CAAC;SACX;aAAM,IAAI,KAAK,YAAY,KAAK,EAAE;YACjC,OAAO,KAAK;iBACT,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CACT,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;iBACnB,KAAK,CAAC,SAAS,CAAC;iBAChB,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CACvC;iBACA,IAAI,CAAC,SAAS,CAAC,CAAC;SACpB;aAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YACpC,MAAM,KAAK,GAAa,EAAE,CAAC;YAC3B,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACpC,IAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;gBACzB,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;oBAC7C,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC;yBACnC,KAAK,CAAC,SAAS,CAAC;yBAChB,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;wBACxB,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC,CAAC;qBACjC;yBAAM;wBACL,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAChB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACrB;iBACF;aACF;YACD,OAAO,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC9B;aAAM;YACL,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;SACtB;IACH,CAAC;CACF;AAED;;GAEG;AACH,MAAM,aAAc,SAAQ,SAAS;IACnC,YAAY,IAAY,EAAE,KAAU,EAAE,OAAyB;QAC7D,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,CAAC,IAAY;QACjB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;YACzC,KAAK,GAAG,EAAE,CAAC;SACZ;QACD,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;QACvD,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC5E,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;YACnC,qEAAqE;YACrE,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC;YAC1B,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBACrD,MAAM,GAAG,GAAG,CAAC;gBACb,IAAI,KAAK,YAAY,KAAK,EAAE;oBAC1B,yDAAyD;oBACzD,KAAK,GAAG,KAAK,CAAC,GAAG,CACf,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CACrD,CAAC;oBACF,SAAS,GAAG,GAAG,CAAC;iBACjB;qBAAM;oBACL,wDAAwD;oBACxD,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;iBACzC;aACF;SACF;QACD,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACvD,8GAA8G;QAC9G,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,EAAE,KAAK,CAAC,CAAC;QAC7C,IAAI,GAAG,IAAI,CAAC,OAAO,CACjB,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAC3D,KAAK,CACN,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAED;;GAEG;AACH,MAAM,cAAe,SAAQ,SAAS;IACpC,YAAY,IAAY,EAAE,KAAU,EAAE,OAAyB;QAC7D,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,MAAkB;QACvB,IAAI,IAAI,CAAC,KAAK,YAAY,KAAK,EAAE;YAC/B,sBAAsB;YACtB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;gBACxB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;oBAC1B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC3D;aACF;iBAAM;gBACL,MAAM,SAAS,GACb,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,gBAAgB;oBACrC,CAAC,CAAC,GAAG;oBACL,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,eAAe;wBACxC,CAAC,CAAC,GAAG;wBACL,CAAC,CAAC,GAAG,CAAC;gBACV,OAAO,MAAM,CAAC,MAAM,CAClB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAC3C,CAAC;aACH;SACF;aAAM,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;YAChE,uBAAuB;YACvB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,YAAY,EAAE;gBACvC,2DAA2D;gBAC3D,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACzC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAChC,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;wBAC7C,MAAM,GAAG,MAAM,CAAC,MAAM,CACpB,GAAG,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,EACtB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAC7B,CAAC;qBACH;iBACF;aACF;iBAAM,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;gBAC/B,mEAAmE;gBACnE,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACzC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAChC,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;wBAC7C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC3D;iBACF;aACF;iBAAM;gBACL,8FAA8F;gBAC9F,MAAM,KAAK,GAAU,EAAE,CAAC;gBACxB,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACzC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAChC,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;wBAC7C,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;wBAChB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACrB;iBACF;gBACD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;aAC/D;SACF;aAAM,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;YAC1D,cAAc;YACd,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;SACpE;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAED;;GAEG;AACH,MAAM,eAAgB,SAAQ,SAAS;IACrC,YAAY,IAAY,EAAE,KAAU,EAAE,OAAyB;QAC7D,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,CAAC,OAAoB;QACzB,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;YACnD,IAAI,IAAI,CAAC,KAAK,YAAY,KAAK,EAAE;gBAC/B,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;oBAC1B,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC7D;aACF;iBAAM;gBACL,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aACtE;SACF;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF;AAED;;GAEG;AACI,MAAM,cAAc;IAOzB,YACS,OAAe,EACf,aAAqB,EACrB,MAAc;QAFd,YAAO,GAAP,OAAO,CAAQ;QACf,kBAAa,GAAb,aAAa,CAAQ;QACrB,WAAM,GAAN,MAAM,CAAQ;QATf,UAAK,GAAG,IAAI,GAAG,EAAyB,CAAC;QACzC,WAAM,GAAG,IAAI,GAAG,EAA0B,CAAC;QAC3C,YAAO,GAAG,IAAI,GAAG,EAA2B,CAAC;IAQlD,CAAC;IAEJ;;OAEG;IACH,IAAI,CAAC,IAAY,EAAE,KAAU,EAAE,OAA0B;QACvD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;IACtE,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,IAAY,EAAE,KAAU,EAAE,OAA0B;QACxD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;IACxE,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,IAAY,EAAE,KAAU,EAAE,OAA0B;QACzD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED;;OAEG;IACH,IAAI,CAAC,KAAU,EAAE,WAAW,GAAG,kBAAkB;QAC/C,IAAI,KAAK,YAAY,IAAI,EAAE;YACzB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC;SACrC;QACD,IACE,IAAI,CAAC,gBAAgB,KAAK,mCAAmC;YAC7D,KAAK,KAAK,IAAI;YACd,OAAO,KAAK,KAAK,QAAQ,EACzB;YACA,0BAA0B;YAC1B,MAAM,KAAK,GAAe,EAAE,CAAC;YAC7B,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACpC,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,CAAC,GAAG,YAAY,KAAK,CAAC,EAAE;oBAC3B,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;iBACb;gBACD,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;oBACnB,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBACxC,IAAI,SAAS,KAAK,IAAI,EAAE;wBACtB,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;qBAC9B;iBACF;aACF;YACD,IAAI,CAAC,YAAY,GAAG,KAAK;iBACtB,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;iBACrE,IAAI,CAAC,GAAG,CAAC,CAAC;SACd;aAAM,IAAI,IAAI,CAAC,gBAAgB,KAAK,qBAAqB,EAAE;YAC1D,6BAA6B;YAC7B,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;YAChC,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;gBACzC,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACpC,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;oBACvB,IAAI,GAAG,YAAY,KAAK,EAAE;wBACxB,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;4BACnB,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;4BACvC,IAAI,QAAQ,KAAK,IAAI,EAAE;gCACrB,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;6BAChC;yBACF;qBACF;yBAAM;wBACL,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;wBACzC,IAAI,QAAQ,KAAK,IAAI,EAAE;4BACrB,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;yBAC7B;qBACF;iBACF;aACF;YACD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;SAC9B;aAAM;YACL,gCAAgC;YAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;IACH,CAAC;IAEO,aAAa,CAAC,KAAU;QAC9B,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;YACzC,OAAO,IAAI,CAAC;SACb;QACD,IAAI,KAAK,YAAY,IAAI,EAAE;YACzB,OAAO,KAAK,CAAC;SACd;QACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SAC9B;QACD,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAED;;OAEG;IACH,KAAK,CAAU,OASd;QACC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;QAExB,kBAAkB;QAClB,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC;QAC9B,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE;YAC3C,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC/B;QACD,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEhC,mBAAmB;QACnB,IAAI,UAAU,GAAG,IAAI,+DAAU,CAAC;YAC9B,OAAO,EAAE,sBAAsB;SAChC,CAAC,CAAC;QACH,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE;YAC7C,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SAC5C;QAED,oBAAoB;QACpB,IAAI,WAAW,GAAG,IAAI,gEAAW,EAAE,CAAC;QACpC,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;SAC5D;QACD,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;YAC/C,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC/C;QAED,0BAA0B;QAC1B,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,YAAY,QAAQ,CAAC,EAAE;YACrE,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACtE;QAED,sBAAsB;QACtB,OAAO,IAAI,gEAAW,CACpB,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EACzB,GAAG,EACH,IAAI,CAAC,YAAY,EACjB;YACE,MAAM,EAAE,UAAU;YAClB,OAAO,EAAE,WAAW;YACpB,YAAY,EAAE,OAAO,CAAC,YAAY;YAClC,cAAc,EAAE,OAAO,CAAC,cAAc;SACvC,CACF,CAAC;IACJ,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzYD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAM3C;AAEzB,mDAAmD;AAC5C,MAAM,aAAa,GAAG,yEAAqB,CAChD,gEAAiB,CAClB,CAAC;AAEF,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE,GAAG,2DAAY,CAAC,YAAY,EAAE,CAAC;AAE3D,MAAM,cAAc,GAAG,kEAAc,CAC1C,aAAa,EACb,CAAC,KAAY,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,CAC/B,CAAC;AAEK,MAAM,aAAa,GAAG,kEAAc,CACzC,aAAa,EACb,CAAC,KAAY,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAC9B,CAAC;AAEK,MAAM,WAAW,GAAG,kEAAc,CAAC,aAAa,EAAE,CAAC,KAAY,EAAE,EAAE,CACxE,SAAS,CAAC,KAAK,CAAC,CACjB,CAAC;AAEK,MAAM,gBAAgB,GAAG,kEAAc,CAAC,aAAa,EAAE,CAAC,KAAY,EAAE,EAAE,CAC7E,cAAc,CAAC,KAAK,CAAC,CACtB,CAAC;AAEK,MAAM,aAAa,GAAG,kEAAc,CACzC,aAAa,EACb,CAAC,KAAY,EAAE,EAAE,CAAC,KAAK,CAAC,UAAU,CACnC,CAAC;AAEK,MAAM,WAAW,GAAG,kEAAc,CACvC,gBAAgB,EAChB,aAAa,EACb,CAAC,QAAQ,EAAE,UAAU,EAAE,EAAE,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,CAC7D,CAAC;;;;;;;;;;;;;;;;;;;ACnCK,MAAM,cAAc;;4EAAd,cAAc;8FAAd,cAAc;QCP3B,2EAA+B;;;;;;;;;;;;;;ACC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEX;AACA;AAC+B;AACC;AAKvD;AACuD;;AAqBxE,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FANb;QACT;YACE,OAAO,EAAE,6DAAc;YACvB,QAAQ,EAAE,uEAAgB,CAAC,wBAAwB,CAAC;SACrD;KACF,YAdQ;YACP,uEAAa;YACb,4FAAuB;YACvB,4DAAY;YACZ,4DAAa;YACb,qEAAgB;YAChB,0EAAqB;YACrB,2FAA0B;SAC3B;mIASU,SAAS,mBAlBL,2DAAY,aAEzB,uEAAa;QACb,4FAAuB;QACvB,4DAAY;QACZ,4DAAa;QACb,qEAAgB;QAChB,0EAAqB;QACrB,2FAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvB9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACO;AACF;AACK;;;;;;;;;;;;;ACFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACL;AACI;AACM;AACE;AAC0B;AACX;AACb;;;;;AAWjD,MAAM,uCAAuC;;8HAAvC,uCAAuC;sHAAvC,uCAAuC;0HARzC;YACP,4DAAY;YACZ,qEAAgB;YAChB,uDAAW,CAAC,UAAU,CAAC,sEAA2B,EAAE,4DAAiB,CAAC;YACtE,2DAAa,CAAC,UAAU,CAAC,CAAC,iEAAY,CAAC,CAAC;YACxC,6FAAc,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,kFAAW,CAAC,UAAU,EAAE,CAAC;SAC5D;mIAEU,uCAAuC,cAPhD,4DAAY;QACZ,qEAAgB;;;;;;;;;;;;;ACVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AAClB;AACU;AAEJ;AAEP;;;;AAOtC,MAAM,eAAgB,SAAQ,yDAAW;IAC9C,YAAY,MAAwB,EAAE,IAAgB;QACpD,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACtB,CAAC;IAOD;;;;;OAKG;IACH,uBAAuB,CAAC,MAAW;QAGjC,MAAM,EAAE,GAAG,IAAI,+DAAc,CAC3B,IAAI,CAAC,OAAO,EACZ,eAAe,CAAC,YAAY,EAC5B,KAAK,CACN,CAAC;QACF,IAAI,MAAM,EAAE;SACX;QAED,OAAO,IAAI,CAAC,IAAI;aACb,OAAO,CACN,EAAE,CAAC,KAAK,CAAC;YACP,YAAY,EAAE,MAAM;YACpB,MAAM,EAAE,YAAY;SACrB,CAAC,CACH;aACA,IAAI,CACH,6DAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,YAAY,iEAAY,CAAC,EAC7C,0DAAG,CAAC,CAAC,CAAoB,EAAE,EAAE;YAC3B,OAAO,CAA8C,CAAC;QACxD,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED;;;;;OAKG;IACH,cAAc,CAAC,MAAW;QACxB,OAAO,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC,IAAI,CAC9C,0DAAG,CACD,CAAC,CAA4C,EAAE,EAAE,CAC/C,CAAC,CAAC,IAA6B,CAClC,CACF,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,sBAAsB,CAAC,MAAW;QAGhC,MAAM,EAAE,GAAG,IAAI,+DAAc,CAC3B,IAAI,CAAC,OAAO,EACZ,eAAe,CAAC,YAAY,EAC5B,KAAK,CACN,CAAC;QACF,IAAI,MAAM,EAAE;SACX;QAED,OAAO,IAAI,CAAC,IAAI;aACb,OAAO,CACN,EAAE,CAAC,KAAK,CAAC;YACP,YAAY,EAAE,MAAM;YACpB,MAAM,EAAE,WAAW;SACpB,CAAC,CACH;aACA,IAAI,CACH,6DAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,YAAY,iEAAY,CAAC,EAC7C,0DAAG,CAAC,CAAC,CAAoB,EAAE,EAAE;YAC3B,OAAO,CAA8C,CAAC;QACxD,CAAC,CAAC,CACH,CAAC;IACN,CAAC;IAED;;;;;OAKG;IACH,aAAa,CAAC,MAAW;QACvB,OAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,IAAI,CAC7C,0DAAG,CACD,CAAC,CAA4C,EAAE,EAAE,CAC/C,CAAC,CAAC,IAA6B,CAClC,CACF,CAAC;IACJ,CAAC;;AAjGD;;GAEG;AACa,4BAAY,GAAG,QAAQ,CAAC;8EAR7B,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;ACdpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACA;AACE;AACH;AAC4B;;;;;;;;;;;;;ACDtE;AAAA;AAAA;AAAA;AAAA;AAAkD;AACK;;;;AAEvD;;GAEG;AAEI,MAAM,WAAW;IACtB,YAAsB,MAAwB,EAAY,IAAgB;QAApD,WAAM,GAAN,MAAM,CAAkB;QAAY,SAAI,GAAJ,IAAI,CAAY;QAElE,aAAQ,GAAW,EAAE,CAAC;IAF+C,CAAC;IAI9E;;;OAGG;IACH,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;IAC9C,CAAC;IAED;;OAEG;IACH,IAAI,OAAO,CAAC,OAAe;QACzB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;;sEAlBU,WAAW;8FAAX,WAAW,WAAX,WAAW;;;;;;;;;;;;;ACNxB;AAAA;AAAA;AAAO,MAAM,QAAQ,GAA+B,EAAE,CAAC;AAEhD,MAAM,YAAY,GAA4B,EAAE,CAAC;;;;;;;;;;;;;;;;;;;ACNT;AAGF;AACwB;AAErE,IAAI,kFAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB;KACrB,eAAe,CAAC,yDAAS,CAAC;KAC1B,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACZtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoB;AACpB,oBAAoB;AAMG;AAC2B;AAC6B;AAEhB;;;AAE/D;;GAEG;AAOI,MAAM,cAAc;IAezB,YAC0B,YAA4B,EACxC,IAAgB;QAE5B,IAAI,YAAY,EAAE;YAChB,MAAM,IAAI,KAAK,CACb,uEAAuE,CACxE,CAAC;SACH;QACD,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,KAAK,CACb,+DAA+D;gBAC7D,0DAA0D,CAC7D,CAAC;SACH;IACH,CAAC;IA7BD,MAAM,CAAC,OAAO,CACZ,MAA8B;QAE9B,OAAO;YACL,QAAQ,EAAE,cAAc;YACxB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,mEAAgB;oBACzB,QAAQ,EAAE,MAAM;iBACjB;aACF;SACF,CAAC;IACJ,CAAC;;4EAbU,cAAc,yDAgBe,cAAc;6FAhB3C,cAAc;kGAFd,CAAC,2EAAe,EAAE,mEAAgB,CAAC,YAHrC,EAAE;;;;;;;;;;;;;ACjBb;AAAA;AAAA;AAAA;AAA2D;;;;;;;;;;;;;ACC3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACxB;AAEU;AACX;AAC4C;;;;AAG1E,MAAM,YAAY;IAmBvB,YAAoB,QAAiB,EAAU,QAAyB;QAApD,aAAQ,GAAR,QAAQ,CAAS;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAlBxE,UAAK,GAAG,kEAAY,CAAC,GAAG,EAAE,CACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,4DAAM,CAAC,mDAAiB,CAAC,EACzB,2DAAK,CAAC;YACJ,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE;gBACd,OAAO,IAAI,CAAC,QAAQ;qBACjB,aAAa,EAAE;qBACf,IAAI,CAAC,0DAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,+DAA6B,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YACpE,CAAC;YAED,OAAO,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBACzB,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAC9B,OAAO,+DAA6B,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YAClD,CAAC;SACF,CAAC,CACH,CACF,CAAC;IAEyE,CAAC;;wEAnBjE,YAAY;+FAAZ,YAAY,WAAZ,YAAY;;;;;;;;;;;;;;;;;ACLzB;;GAEG;AAII,MAAM,gBAAgB;IAH7B;QAIE,YAAO,GAAW,EAAE,CAAC;KACtB;;gFAFY,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;ACPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACJ;AACiB;AAET;AACA;AACmB;;;;;AAe9D,MAAM,8BAA8B;;4GAA9B,8BAA8B;6GAA9B,8BAA8B;iHAZhC;YACP,uDAAW,CAAC,OAAO,CAAC,+CAAQ,EAAE;gBAC5B,iEAAY;gBACZ,aAAa,EAAE;oBACb,uBAAuB,EAAE,IAAI;oBAC7B,wBAAwB,EAAE,IAAI;iBAC/B;aACF,CAAC;YACF,CAAC,kFAAW,CAAC,UAAU,CAAC,CAAC,CAAC,wEAAmB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE;YAC/D,2DAAa,CAAC,OAAO,CAAC,CAAC,6DAAU,CAAC,CAAC;SACpC;mIAEU,8BAA8B;;;;;;;;;;;;;ACtB3C;AAAA;AAAA;AAAA;AAAsD;;;;;;;;;;;;;ACAtD;AAAA;AAAA;AAAA;AAAA;AAAkD;AAG3C,MAAM,IAAI,GAAG,gEAAY,CAAC,mBAAmB,CAAC,CAAC;AAE/C,MAAM,gBAAgB,GAAG,gEAAY,CAC1C,gCAAgC,EAChC,yDAAK,EAA4B,CAClC,CAAC;AAEK,MAAM,gBAAgB,GAAG,gEAAY,CAC1C,gCAAgC,EAChC,yDAAK,EAAkB,CACxB,CAAC;;;;;;;;;;;;;ACbF;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,UAAU,EACR,wEAAwE;CAC3E,CAAC;;;;;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuF;AACoB;AAClD;AACF;;;AAEvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAc;QACzB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,MAAM;gBACjB,UAAU,EAAE,qBAAqB;aAClC;YACD;gBACE,IAAI,EAAE,qBAAqB;gBAC3B,YAAY,EAAE,GAAG,EAAE,CACjB,yOAAwD,CAAC,IAAI,CAC3D,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,sCAAsC,CAC9D;aACJ;SACF;KACF;CACF,CAAC;AAWK,MAAM,0BAA0B;;oGAA1B,0BAA0B;yGAA1B,0BAA0B;6GAR5B;YACP,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;YAC5B,oGAA8B;YAC9B,wHAAuC;SACxC,EAES,4DAAY;mIAEX,0BAA0B,mBAHtB,qEAAc,2EAH3B,oGAA8B;QAC9B,wHAAuC,aAG/B,4DAAY;;;;;;;;;;;;;;;;;;;;;AC3BjB,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QCPzB,2EAAU;QACR,2EAA+B;QACjC,4DAAW;;;;;;;;;;;;;;;;;;ACCJ,MAAM,UAAU;;oEAAV,UAAU;6FAAV,UAAU,WAAV,UAAU;;;;;;;;;;;;;ACHvB;AAAA;AAAA;AAAA;AAAkC;;;;;;;;;;;;ACAlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { createReducer, on, Action } from '@ngrx/store';\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nimport * as UsersActions from './users.actions';\nimport { UsersEntity } from './users.models';\n\nexport const USERS_FEATURE_KEY = 'users';\n\nexport interface State extends EntityState<UsersEntity> {\n  selectedId?: string | number; // which Users record has been selected\n  loaded: boolean; // has the Users list been loaded\n  error?: string | null; // last known error (if any)\n}\n\nexport interface UsersPartialState {\n  readonly [USERS_FEATURE_KEY]: State;\n}\n\nexport const usersAdapter: EntityAdapter<UsersEntity> = createEntityAdapter<UsersEntity>();\n\nexport const initialState: State = usersAdapter.getInitialState({\n  // set initial required properties\n  loaded: false,\n});\n\nconst usersReducer = createReducer(\n  initialState,\n  on(UsersActions.init, (state) => ({ ...state, loaded: false, error: null })),\n  on(UsersActions.loadUsersSuccess, (state, { users }) =>\n    usersAdapter.setAll(users, { ...state, loaded: true })\n  ),\n  on(UsersActions.loadUsersFailure, (state, { error }) => ({ ...state, error }))\n);\n\nexport function reducer(state: State | undefined, action: Action) {\n  return usersReducer(state, action);\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport {\n  HttpRequest,\n  HttpParameterCodec,\n  HttpParams,\n  HttpHeaders,\n} from '@angular/common/http';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst ParameterCodecInstance = new ParameterCodec();\n\n/**\n * Defines the options for appending a parameter\n */\ninterface ParameterOptions {\n  style?: string;\n  explode?: boolean;\n}\n\n/**\n * Base class for a parameter\n */\nabstract class Parameter {\n  constructor(\n    public name: string,\n    public value: any,\n    public options: ParameterOptions,\n    defaultStyle: string,\n    defaultExplode: boolean\n  ) {\n    this.options = options || {};\n    if (this.options.style === null || this.options.style === undefined) {\n      this.options.style = defaultStyle;\n    }\n    if (this.options.explode === null || this.options.explode === undefined) {\n      this.options.explode = defaultExplode;\n    }\n  }\n\n  serializeValue(value: any, separator = ','): string {\n    if (value === null || value === undefined) {\n      return '';\n    } else if (value instanceof Array) {\n      return value\n        .map((v) =>\n          this.serializeValue(v)\n            .split(separator)\n            .join(encodeURIComponent(separator))\n        )\n        .join(separator);\n    } else if (typeof value === 'object') {\n      const array: string[] = [];\n      for (const key of Object.keys(value)) {\n        let propVal = value[key];\n        if (propVal !== null && propVal !== undefined) {\n          propVal = this.serializeValue(propVal)\n            .split(separator)\n            .join(encodeURIComponent(separator));\n          if (this.options.explode) {\n            array.push(`${key}=${propVal}`);\n          } else {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n      }\n      return array.join(separator);\n    } else {\n      return String(value);\n    }\n  }\n}\n\n/**\n * A parameter in the operation path\n */\nclass PathParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(path: string): string {\n    let value = this.value;\n    if (value === null || value === undefined) {\n      value = '';\n    }\n    let prefix = this.options.style === 'label' ? '.' : '';\n    let separator = this.options.explode ? (prefix === '' ? ',' : prefix) : ',';\n    if (this.options.style === 'matrix') {\n      // The parameter name is just used as prefix, except in some cases...\n      prefix = `;${this.name}=`;\n      if (this.options.explode && typeof value === 'object') {\n        prefix = ';';\n        if (value instanceof Array) {\n          // For arrays we have to repeat the name for each element\n          value = value.map(\n            (v) => `${this.name}=${this.serializeValue(v, ';')}`\n          );\n          separator = ';';\n        } else {\n          // For objects we have to put each the key / value pairs\n          value = this.serializeValue(value, ';');\n        }\n      }\n    }\n    value = prefix + this.serializeValue(value, separator);\n    // Replace both the plain variable and the corresponding variant taking in the prefix and explode into account\n    path = path.replace(`{${this.name}}`, value);\n    path = path.replace(\n      `{${prefix}${this.name}${this.options.explode ? '*' : ''}}`,\n      value\n    );\n    return path;\n  }\n}\n\n/**\n * A parameter in the query\n */\nclass QueryParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'form', true);\n  }\n\n  append(params: HttpParams): HttpParams {\n    if (this.value instanceof Array) {\n      // Array serialization\n      if (this.options.explode) {\n        for (const v of this.value) {\n          params = params.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        const separator =\n          this.options.style === 'spaceDelimited'\n            ? ' '\n            : this.options.style === 'pipeDelimited'\n            ? '|'\n            : ',';\n        return params.append(\n          this.name,\n          this.serializeValue(this.value, separator)\n        );\n      }\n    } else if (this.value !== null && typeof this.value === 'object') {\n      // Object serialization\n      if (this.options.style === 'deepObject') {\n        // Append a parameter for each key, in the form `name[key]`\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(\n              `${this.name}[${key}]`,\n              this.serializeValue(propVal)\n            );\n          }\n        }\n      } else if (this.options.explode) {\n        // Append a parameter for each key without using the parameter name\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            params = params.append(key, this.serializeValue(propVal));\n          }\n        }\n      } else {\n        // Append a single parameter whose values are a comma-separated list of key,value,key,value...\n        const array: any[] = [];\n        for (const key of Object.keys(this.value)) {\n          const propVal = this.value[key];\n          if (propVal !== null && propVal !== undefined) {\n            array.push(key);\n            array.push(propVal);\n          }\n        }\n        params = params.append(this.name, this.serializeValue(array));\n      }\n    } else if (this.value !== null && this.value !== undefined) {\n      // Plain value\n      params = params.append(this.name, this.serializeValue(this.value));\n    }\n    return params;\n  }\n}\n\n/**\n * A parameter in the HTTP request header\n */\nclass HeaderParameter extends Parameter {\n  constructor(name: string, value: any, options: ParameterOptions) {\n    super(name, value, options, 'simple', false);\n  }\n\n  append(headers: HttpHeaders): HttpHeaders {\n    if (this.value !== null && this.value !== undefined) {\n      if (this.value instanceof Array) {\n        for (const v of this.value) {\n          headers = headers.append(this.name, this.serializeValue(v));\n        }\n      } else {\n        headers = headers.append(this.name, this.serializeValue(this.value));\n      }\n    }\n    return headers;\n  }\n}\n\n/**\n * Helper to build http requests from parameters\n */\nexport class RequestBuilder {\n  private _path = new Map<string, PathParameter>();\n  private _query = new Map<string, QueryParameter>();\n  private _header = new Map<string, HeaderParameter>();\n  _bodyContent: any | null;\n  _bodyContentType?: string;\n\n  constructor(\n    public rootUrl: string,\n    public operationPath: string,\n    public method: string\n  ) {}\n\n  /**\n   * Sets a path parameter\n   */\n  path(name: string, value: any, options?: ParameterOptions): void {\n    this._path.set(name, new PathParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a query parameter\n   */\n  query(name: string, value: any, options?: ParameterOptions): void {\n    this._query.set(name, new QueryParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets a header parameter\n   */\n  header(name: string, value: any, options?: ParameterOptions): void {\n    this._header.set(name, new HeaderParameter(name, value, options || {}));\n  }\n\n  /**\n   * Sets the body content, along with the content type\n   */\n  body(value: any, contentType = 'application/json'): void {\n    if (value instanceof Blob) {\n      this._bodyContentType = value.type;\n    } else {\n      this._bodyContentType = contentType;\n    }\n    if (\n      this._bodyContentType === 'application/x-www-form-urlencoded' &&\n      value !== null &&\n      typeof value === 'object'\n    ) {\n      // Handle URL-encoded data\n      const pairs: string[][] = [];\n      for (const key of Object.keys(value)) {\n        let val = value[key];\n        if (!(val instanceof Array)) {\n          val = [val];\n        }\n        for (const v of val) {\n          const formValue = this.formDataValue(v);\n          if (formValue !== null) {\n            pairs.push([key, formValue]);\n          }\n        }\n      }\n      this._bodyContent = pairs\n        .map((p) => `${encodeURIComponent(p[0])}=${encodeURIComponent(p[1])}`)\n        .join('&');\n    } else if (this._bodyContentType === 'multipart/form-data') {\n      // Handle multipart form data\n      const formData = new FormData();\n      if (value !== null && value !== undefined) {\n        for (const key of Object.keys(value)) {\n          const val = value[key];\n          if (val instanceof Array) {\n            for (const v of val) {\n              const toAppend = this.formDataValue(v);\n              if (toAppend !== null) {\n                formData.append(key, toAppend);\n              }\n            }\n          } else {\n            const toAppend = this.formDataValue(val);\n            if (toAppend !== null) {\n              formData.set(key, toAppend);\n            }\n          }\n        }\n      }\n      this._bodyContent = formData;\n    } else {\n      // The body is the plain content\n      this._bodyContent = value;\n    }\n  }\n\n  private formDataValue(value: any): any {\n    if (value === null || value === undefined) {\n      return null;\n    }\n    if (value instanceof Blob) {\n      return value;\n    }\n    if (typeof value === 'object') {\n      return JSON.stringify(value);\n    }\n    return String(value);\n  }\n\n  /**\n   * Builds the request with the current set parameters\n   */\n  build<T = any>(options?: {\n    /** Which content types to accept */\n    accept?: string;\n\n    /** The expected response type */\n    responseType?: 'json' | 'text' | 'blob' | 'arraybuffer';\n\n    /** Whether to report progress on uploads / downloads */\n    reportProgress?: boolean;\n  }): HttpRequest<T> {\n    options = options || {};\n\n    // Path parameters\n    let path = this.operationPath;\n    for (const pathParam of this._path.values()) {\n      path = pathParam.append(path);\n    }\n    const url = this.rootUrl + path;\n\n    // Query parameters\n    let httpParams = new HttpParams({\n      encoder: ParameterCodecInstance,\n    });\n    for (const queryParam of this._query.values()) {\n      httpParams = queryParam.append(httpParams);\n    }\n\n    // Header parameters\n    let httpHeaders = new HttpHeaders();\n    if (options.accept) {\n      httpHeaders = httpHeaders.append('Accept', options.accept);\n    }\n    for (const headerParam of this._header.values()) {\n      httpHeaders = headerParam.append(httpHeaders);\n    }\n\n    // Request content headers\n    if (this._bodyContentType && !(this._bodyContent instanceof FormData)) {\n      httpHeaders = httpHeaders.set('Content-Type', this._bodyContentType);\n    }\n\n    // Perform the request\n    return new HttpRequest<T>(\n      this.method.toUpperCase(),\n      url,\n      this._bodyContent,\n      {\n        params: httpParams,\n        headers: httpHeaders,\n        responseType: options.responseType,\n        reportProgress: options.reportProgress,\n      }\n    );\n  }\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport {\n  USERS_FEATURE_KEY,\n  State,\n  UsersPartialState,\n  usersAdapter,\n} from './users.reducer';\n\n// Lookup the 'Users' feature state managed by NgRx\nexport const getUsersState = createFeatureSelector<UsersPartialState, State>(\n  USERS_FEATURE_KEY\n);\n\nconst { selectAll, selectEntities } = usersAdapter.getSelectors();\n\nexport const getUsersLoaded = createSelector(\n  getUsersState,\n  (state: State) => state.loaded\n);\n\nexport const getUsersError = createSelector(\n  getUsersState,\n  (state: State) => state.error\n);\n\nexport const getAllUsers = createSelector(getUsersState, (state: State) =>\n  selectAll(state)\n);\n\nexport const getUsersEntities = createSelector(getUsersState, (state: State) =>\n  selectEntities(state)\n);\n\nexport const getSelectedId = createSelector(\n  getUsersState,\n  (state: State) => state.selectedId\n);\n\nexport const getSelected = createSelector(\n  getUsersEntities,\n  getSelectedId,\n  (entities, selectedId) => selectedId && entities[selectedId]\n);\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'findme-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.css'],\n})\nexport class ShellComponent {}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport { NgFindMeFeatureShellModule } from '@findme/ng-find-me/feature-shell';\nimport { HttpClientJsonpModule, HttpClientModule } from '@angular/common/http';\nimport {\n  iconsPathFactory,\n  TUI_ICONS_PATH,\n  TuiRootModule,\n} from '@taiga-ui/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule,\n    TuiRootModule,\n    HttpClientModule,\n    HttpClientJsonpModule,\n    NgFindMeFeatureShellModule,\n  ],\n  providers: [\n    {\n      provide: TUI_ICONS_PATH,\n      useValue: iconsPathFactory('assets/taiga-ui/icons/'),\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export * from './lib/users-api.module';\nexport * from './lib/models/api-user-summary';\nexport * from './lib/models/api-address-vm';\nexport * from './lib/services/api-users.service';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport * as fromUsers from './+state/users.reducer';\nimport { UsersEffects } from './+state/users.effects';\nimport { UsersApiModule } from '@findme/ng-find-me/users/data-access/users-api';\nimport { environment } from '@findme/ng-find-me/shared/environments';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    StoreModule.forFeature(fromUsers.USERS_FEATURE_KEY, fromUsers.reducer),\n    EffectsModule.forFeature([UsersEffects]),\n    UsersApiModule.forRoot({ rootUrl: environment.apiRootUrl }),\n  ],\n})\nexport class NgFindMeUsersDataAccessUsersStateModule {}\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { BaseService } from '../base-service';\nimport { ApiConfiguration } from '../api-configuration';\nimport { StrictHttpResponse } from '../strict-http-response';\nimport { RequestBuilder } from '../request-builder';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\nimport { ApiUserSummary } from '../models/api-user-summary';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiUsersService extends BaseService {\n  constructor(config: ApiConfiguration, http: HttpClient) {\n    super(config, http);\n  }\n\n  /**\n   * Path part for operation usersGet\n   */\n  static readonly UsersGetPath = '/users';\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `usersGet$Plain()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  usersGet$Plain$Response(params?: {}): Observable<\n    StrictHttpResponse<Array<ApiUserSummary>>\n  > {\n    const rb = new RequestBuilder(\n      this.rootUrl,\n      ApiUsersService.UsersGetPath,\n      'get'\n    );\n    if (params) {\n    }\n\n    return this.http\n      .request(\n        rb.build({\n          responseType: 'text',\n          accept: 'text/plain',\n        })\n      )\n      .pipe(\n        filter((r: any) => r instanceof HttpResponse),\n        map((r: HttpResponse<any>) => {\n          return r as StrictHttpResponse<Array<ApiUserSummary>>;\n        })\n      );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `usersGet$Plain$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  usersGet$Plain(params?: {}): Observable<Array<ApiUserSummary>> {\n    return this.usersGet$Plain$Response(params).pipe(\n      map(\n        (r: StrictHttpResponse<Array<ApiUserSummary>>) =>\n          r.body as Array<ApiUserSummary>\n      )\n    );\n  }\n\n  /**\n   * This method provides access to the full `HttpResponse`, allowing access to response headers.\n   * To access only the response body, use `usersGet$Json()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  usersGet$Json$Response(params?: {}): Observable<\n    StrictHttpResponse<Array<ApiUserSummary>>\n  > {\n    const rb = new RequestBuilder(\n      this.rootUrl,\n      ApiUsersService.UsersGetPath,\n      'get'\n    );\n    if (params) {\n    }\n\n    return this.http\n      .request(\n        rb.build({\n          responseType: 'json',\n          accept: 'text/json',\n        })\n      )\n      .pipe(\n        filter((r: any) => r instanceof HttpResponse),\n        map((r: HttpResponse<any>) => {\n          return r as StrictHttpResponse<Array<ApiUserSummary>>;\n        })\n      );\n  }\n\n  /**\n   * This method provides access to only to the response body.\n   * To access the full response (for headers, for example), `usersGet$Json$Response()` instead.\n   *\n   * This method doesn't expect any request body.\n   */\n  usersGet$Json(params?: {}): Observable<Array<ApiUserSummary>> {\n    return this.usersGet$Json$Response(params).pipe(\n      map(\n        (r: StrictHttpResponse<Array<ApiUserSummary>>) =>\n          r.body as Array<ApiUserSummary>\n      )\n    );\n  }\n}\n","export * from './lib/+state/users.actions';\nexport * from './lib/+state/users.reducer';\nexport * from './lib/+state/users.selectors';\nexport * from './lib/+state/users.models';\nexport * from './lib/ng-find-me-users-data-access-users-state.module';\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiConfiguration } from './api-configuration';\n\n/**\n * Base class for services\n */\n@Injectable()\nexport class BaseService {\n  constructor(protected config: ApiConfiguration, protected http: HttpClient) {}\n\n  private _rootUrl: string = '';\n\n  /**\n   * Returns the root url for all operations in this service. If not set directly in this\n   * service, will fallback to `ApiConfiguration.rootUrl`.\n   */\n  get rootUrl(): string {\n    return this._rootUrl || this.config.rootUrl;\n  }\n\n  /**\n   * Sets the root URL for API operations in this service.\n   */\n  set rootUrl(rootUrl: string) {\n    this._rootUrl = rootUrl;\n  }\n}\n","import { ActionReducerMap, MetaReducer } from '@ngrx/store';\n\nexport type AppState = unknown;\n\nexport const reducers: ActionReducerMap<AppState> = {};\n\nexport const metaReducers: MetaReducer<AppState>[] = [];\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from '@findme/ng-find-me/shared/environments';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","/* tslint:disable */\n/* eslint-disable */\nimport {\n  NgModule,\n  ModuleWithProviders,\n  SkipSelf,\n  Optional,\n} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiConfiguration, ApiConfigurationParams } from './api-configuration';\n\nimport { ApiUsersService } from './services/api-users.service';\n\n/**\n * Module that provides all services and configuration.\n */\n@NgModule({\n  imports: [],\n  exports: [],\n  declarations: [],\n  providers: [ApiUsersService, ApiConfiguration],\n})\nexport class UsersApiModule {\n  static forRoot(\n    params: ApiConfigurationParams\n  ): ModuleWithProviders<UsersApiModule> {\n    return {\n      ngModule: UsersApiModule,\n      providers: [\n        {\n          provide: ApiConfiguration,\n          useValue: params,\n        },\n      ],\n    };\n  }\n\n  constructor(\n    @Optional() @SkipSelf() parentModule: UsersApiModule,\n    @Optional() http: HttpClient\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'UsersApiModule is already loaded. Import in your base AppModule only.'\n      );\n    }\n    if (!http) {\n      throw new Error(\n        'You need to import the HttpClientModule in your AppModule! \\n' +\n          'See also https://github.com/angular/angular/issues/20575'\n      );\n    }\n  }\n}\n","export * from './lib/ng-find-me-shared-data-access.module';\n","import { Injectable } from '@angular/core';\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { fetch } from '@nrwl/angular';\n\nimport * as UsersActions from './users.actions';\nimport { map } from 'rxjs/operators';\nimport { ApiUsersService } from '@findme/ng-find-me/users/data-access/users-api';\n\n@Injectable()\nexport class UsersEffects {\n  init$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UsersActions.init),\n      fetch({\n        run: (action) => {\n          return this.usersApi\n            .usersGet$Json()\n            .pipe(map((users) => UsersActions.loadUsersSuccess({ users })));\n        },\n\n        onError: (action, error) => {\n          console.error('Error', error);\n          return UsersActions.loadUsersFailure({ error });\n        },\n      })\n    )\n  );\n\n  constructor(private actions$: Actions, private usersApi: ApiUsersService) {}\n}\n","/* tslint:disable */\n/* eslint-disable */\nimport { Injectable } from '@angular/core';\n\n/**\n * Global configuration\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiConfiguration {\n  rootUrl: string = '';\n}\n\n/**\n * Parameters for `UsersApiModule.forRoot()`\n */\nexport interface ApiConfigurationParams {\n  rootUrl?: string;\n}\n","import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { metaReducers, reducers } from './+state';\nimport { AppEffects } from './+state/app.effects';\nimport { environment } from '@findme/ng-find-me/shared/environments';\n\n@NgModule({\n  imports: [\n    StoreModule.forRoot(reducers, {\n      metaReducers,\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true,\n      },\n    }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    EffectsModule.forRoot([AppEffects]),\n  ],\n})\nexport class NgFindMeSharedDataAccessModule {}\n","export * from './lib/ng-find-me-feature-shell.module';\n","import { createAction, props } from '@ngrx/store';\nimport { UsersEntity } from './users.models';\n\nexport const init = createAction('[Users Page] Init');\n\nexport const loadUsersSuccess = createAction(\n  '[Users/API] Load Users Success',\n  props<{ users: UsersEntity[] }>()\n);\n\nexport const loadUsersFailure = createAction(\n  '[Users/API] Load Users Failure',\n  props<{ error: any }>()\n);\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiRootUrl:\n    'https://findmeapi-env.eba-y8ktwmfy.ap-southeast-2.elasticbeanstalk.com',\n};\n","import { NgModule } from '@angular/core';\nimport { NgFindMeSharedDataAccessModule } from '@findme/ng-find-me/shared/data-access';\nimport { NgFindMeUsersDataAccessUsersStateModule } from '@findme/ng-find-me/users/data-access/users-state';\nimport { ShellComponent } from './shell/shell.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ShellComponent,\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'user-address-search',\n      },\n      {\n        path: 'user-address-search',\n        loadChildren: () =>\n          import('@findme/ng-find-me/feature-user-address-search').then(\n            (esModule) => esModule.NgFindMeFeatureUserAddressSearchModule\n          ),\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    NgFindMeSharedDataAccessModule,\n    NgFindMeUsersDataAccessUsersStateModule,\n  ],\n  declarations: [ShellComponent],\n  exports: [RouterModule],\n})\nexport class NgFindMeFeatureShellModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'findme-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n","<tui-root>\n  <router-outlet></router-outlet>\n</tui-root>\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AppEffects {}\n","export * from './lib/environment';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}